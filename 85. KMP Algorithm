class Solution {
    public int strStr(String haystack, String needle) {
        
        int[] lps = new int[needle.length()];

        construct(lps,needle);

        int i=0;
        int j=0;

        int n = haystack.length();
        int m = needle.length();

        while(i<n){
            if(haystack.charAt(i)==needle.charAt(j)){
                i++;
                j++;
                if (j == m) {
                    return i-j;
                }
            }
            else{
                
                if(j!=0){
                    j = lps[j-1];
                }
                else{
                    i++;
                }

            }
        }

        return -1;
    }

    public void construct(int[] lps,String pattern){
        int len = 0;
        int i=0;

        lps[0] = 0;

        i++;

        while(i<pattern.length()){
            if(pattern.charAt(i)==pattern.charAt(len)){
                len++;
                lps[i] = len;
                i++;
            }
            else{
                if(len!=0){
                    len = lps[len-1];
                }
                else{
                    lps[i] = 0;
                    i++;
                }
            }
        }
    }
}
