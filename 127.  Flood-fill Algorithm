class Solution {
    int[][] directions = new int[][]{{1,0},{0,1},{0,-1},{-1,0}};
    int[][] image;
    int startColor;
    public int[][] floodFill(int[][] image, int sr, int sc, int color) {
        this.image = image;
        startColor = image[sr][sc];

        dfs(sr,sc,color);

        return image;
    }

    public void dfs(int row,int col,int color){
        if(image[row][col]==color){
            return;
        }

        if(image[row][col]!=startColor){
            return;
        }

        image[row][col] = color;

        for(int[] direction:directions){
            int nr = row+direction[0];
            int nc = col+direction[1];

            if(isValid(nr,nc)){
                dfs(nr,nc,color);
            }
        }
    }

    public boolean isValid(int row,int col){
        return row>=0 && row<image.length && col>=0 && col<image[0].length;
    }
}
