

//User function Template for Java

/*
class Node{
    int data;
    Node left;
    Node right;
    Node(int data){
        this.data = data;
        left=null;
        right=null;
    }
}
*/

class Pair{
    Node n;
    int col;
    Pair(Node n,int col){
        this.n = n;
        this.col = col;
    }
}

class Solution
{
    //Function to return a list of nodes visible from the top view 
    //from left to right in Binary Tree.
   
    static ArrayList<Integer> topView(Node root)
    {
        // add your code
         TreeMap<Integer,Integer> tm = new TreeMap<>();
         
        Queue<Pair> q = new LinkedList<>();
        
        q.add(new Pair(root,0));
        
        while(!q.isEmpty()){
            int n = q.size();
            for(int i=0;i<n;i++){
                Pair p = q.remove();
                Node node = p.n;
                int col = p.col;
                
                if(!tm.containsKey(col)){
                    tm.put(col,node.data);
                }
                
                if(node.left!=null){
                    q.add(new Pair(node.left,col-1));
                }
                
                if(node.right!=null){
                    q.add(new Pair(node.right,col+1));
                }
            }
        }
        
        
        ArrayList<Integer> al = new ArrayList<>();
        
        for(int val:tm.keySet()){
            al.add(tm.get(val));
        }
        
        return al;
        
    }
}
