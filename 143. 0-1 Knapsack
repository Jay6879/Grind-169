class Solution {
    // Function to return max value that can be put in knapsack of given capacity
    static int knapSack(int capacity, int val[], int wt[]) {
        int n = val.length;
        int[] dp = new int[capacity + 1];

        // Iterate through all items
        for (int i = 0; i < n; i++) {
            // Traverse dp array from back to front to avoid overwriting
            for (int j = capacity; j >= wt[i]; j--) {
                dp[j] = Math.max(dp[j], val[i] + dp[j - wt[i]]);
            }
        }

        return dp[capacity];
    }
    
}
