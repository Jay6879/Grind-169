/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        Queue<TreeNode> q = new LinkedList<>();

        q.add(root);

        List<List<Integer>> ans = new ArrayList<>();

        if(root==null){
            return ans;
        }

        boolean flag = true;

        while(!q.isEmpty()){
            int n = q.size();

            ArrayList<Integer> al = new ArrayList<>();

            for(int i=0;i<n;i++){
                TreeNode node = q.poll();
                al.add(node.val);
                if(node.left!=null){
                    q.add(node.left);
                }
                if(node.right!=null){
                    q.add(node.right);
                }
            }

            if(flag){
                flag = !flag;
            }
            else{
                flag = !flag;
                Collections.reverse(al);
            }

            ans.add(al);

        }

        return ans;
    }
}
