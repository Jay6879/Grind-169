class State{
    int level;
    Node root;
    State(int level,Node root){
        this.level = level;
        this.root = root;
    }
}

class Solution
{
    //Function to return a list containing the bottom view of the given tree.
    public ArrayList <Integer> bottomView(Node root)
    {
        // Code here
        TreeMap<Integer,Integer> tm = new TreeMap<>();
        
        Queue<State> q = new LinkedList<>();
        
        q.add(new State(0,root));
        
        while(!q.isEmpty()){
            State st = q.remove();
            
            Node n = st.root;
            int level = st.level;
            
            tm.put(level,n.data);
            
            if(n.left!=null){
                q.add(new State(level-1,n.left));
            }
            
            if(n.right!=null){
                q.add(new State(level+1,n.right));
            }
            
        }
        
        ArrayList<Integer> al = new ArrayList<>();
        
        for(int val:tm.keySet()){
            al.add(tm.get(val));
        }
        
        return al;
    }
    
}
