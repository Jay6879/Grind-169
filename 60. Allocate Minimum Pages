class Solution {
    public static int findPages(int[] arr, int k) {
        // code here
        if (k > arr.length) {
            return -1;
        }
        
        int low = Arrays.stream(arr).max().getAsInt();
        int high = Arrays.stream(arr).sum();

        
        int ans = -1;
        
        while(low<=high){
            int mid = low+(high-low)/2;
            
            if(isPossible(arr,mid,k)){
                ans = mid;
                high = mid-1;
            }
            else{
                low = mid+1;
            }
        }
        
        return ans;
    }
    
    public static boolean isPossible(int[] arr,int maxPages,int k){
        int count = 1;
        int currPages = 0;
        
        for(int num:arr){
            if (currPages + num > maxPages) {
                count++; // Allocate to a new student
                currPages = num; // Start new allocation

                if (count > k) {
                    return false; // More students needed than allowed
                }
            } else {
                currPages += num;
            }
        }
        
        return true;
    }
}
