/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isBalanced(TreeNode root) {
        if(root==null){
            return true;
        }

        if(!isBalanced(root.left)){
            return false;
        }

        if(!isBalanced(root.right)){
            return false;
        }

        int left = findDepth(root.left,1);
        int right = findDepth(root.right,1);

        return Math.abs(left-right)<=1;
    }

    public int findDepth(TreeNode root,int depth){
        if(root==null){
            return depth;
        }

        int left = findDepth(root.left,depth+1);
        int right = findDepth(root.right,depth+1);

        return Math.max(left,right);
    }
}
