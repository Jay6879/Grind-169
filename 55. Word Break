class Solution {
    public boolean wordBreak(String s, List<String> wordDict) {
        HashSet<String> hset = new HashSet<>(wordDict);
        HashMap<Integer, Boolean> memo = new HashMap<>();
        return backtrack(0, s, hset, memo);
    }

    public boolean backtrack(int i, String s, HashSet<String> hset, HashMap<Integer, Boolean> memo) {
        if (i >= s.length()) {
            return true;
        }

        if (memo.containsKey(i)) {
            return memo.get(i);
        }

        for (int j = i; j < s.length(); j++) {
            if (hset.contains(s.substring(i, j + 1))) {
                if (backtrack(j + 1, s, hset, memo)) {
                    memo.put(i, true);
                    return true;
                }
            }
        }

        memo.put(i, false);
        return false;
    }
}
